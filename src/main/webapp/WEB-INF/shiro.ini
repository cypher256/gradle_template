#------------------------------------------------------------------------------
# Apache Shiro ログイン認証設定 (web.xml ShiroFilter)
#------------------------------------------------------------------------------

# AJAX をサポートするカスタムフィルター定義
# ・デフォルトの authc フォルターはエラー時にログイン画面にリダイレクトされるため
# ・末尾の urls セクションに AJAX 対象 URL を指定する
# ・AJAX リクエストでない場合もサポートするため、loginUrl を指定する
# ・ログイン画面の拡張子は jsp であることを隠すため html だが web.xml の設定により中身は JSP
[main]
#authc.loginUrl = /login.html
authcAjax = jp.example.filter.AjaxSupportShiroFilter
authcAjax.loginUrl = /login.html

# 認証データベース接続設定 (context.xml, create_table.sql 参照)
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.requiredType = javax.sql.DataSource
ds.resourceName = java:comp/env/jdbc/main

# 認証データベース SQL
dbRealm = org.apache.shiro.realm.jdbc.JdbcRealm
dbRealm.dataSource = $ds
dbRealm.authenticationQuery = SELECT password FROM users WHERE username = ?

# DB に格納するパスワード: SHA-256 ハッシュ回数 50 万回 ソルト (サンプルでは平文)
#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
#dbRealm.credentialsMatcher = $passwordMatcher

# URL パターンに対するフィルター設定 (上が優先)
# ・anon: 認証対象外 (static 配下はすべて認証不要にし、css などはそこに配置)
# ・authc: フォーム認証対象 (authcAjax に拡張しているため未使用)
# ・authcAjax: authc を拡張した独自フィルター
# logout や anon などのデフォルトで提供されるフィルター
#   https://greycode.github.io/shiro/doc/web.html#Web-DefaultFilters
[urls]
/logout = logout
/static/** = anon
/** = authcAjax
