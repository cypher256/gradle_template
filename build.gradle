/*
---------------------------------------------------------------------------------------------------
CRUD プロジェクト React Vue JSP サンプルビルド定義
---------------------------------------------------------------------------------------------------

Eclipse gradle プロジェクト作成ウィザードの雛形

	下記のディレクトリを入れ替えることで、雛形を変更できます。
	ワークスペース作成前	.metadata.default/init.gradle_template
	ワークスペース作成後	workspace/.metadata/init.gradle_template

プロジェクト概要

	このプロジェクトは Spring などのフレームワークを使用せずに構成された Servlet サンプルプロジェクトです。
	同じ機能 (DB 検索、登録・修正・削除) を React、Vue、JSP の 3 種類で同一プロジェクト内に実装しています。
	サーバー側は Java 17, Tomcat 9 (javax.servlet) で動作し、ログイン機能も含まれています。
	サンプルの React と Vue は純粋な HTML と API 呼び出しのみなので、サーバー側の技術や言語に依存しません。

	フロントエンド

		React	src/main/webapp/spa/React* (.html と .jsx)
		Vue		src/main/webapp/spa/Vue* (.html と .vue)
		JSP		src/main/webapp/WEB-INF/jsp/item/* (.jsp - サーバー側だけど)
		
	サーバーサイド
	
		SPA	用	src/main/java/jp/example/servlet/SpaCrudServlet.java (React、Vue 共通 - フロント技術非依存)
		JSP	用	src/main/java/jp/example/servlet/JspCrudServlet.java

実行方法
	
	Eclipse > プロジェクト右クリック > デバッグ > サーバーでデバッグ
		(実行ではなくデバッグ実行することで、再起動なしで Java コードの変更が反映される)
		> サーバー > ツリーの localhost 開く > Tomcat9_Java17
		> このプロジェクトを実行するときは常にこのサーバーを使用 ON
		> 完了

war ファイル作成
	
	Eclipse > Gradle タスク・ビュー > プロジェクト名 > build > war ダブル・クリック
	出力先: プロジェクト配下の build/libs

構成要素

	DB 接続プール	JNDI Tomcat		src/main/webapp/META-INF/context.xml
	DB アクセス		uroboroSQL		src/main/java/jp/example/filter/AutoTransactionFilter.java
	ログ管理		SLF4J			src/main/resources/simplelogger.properties
	セキュリティ	CSRF, CORS,,,	src/main/webapp/WEB-INF/web.xml
	
---------------------------------------------------------------------------------------------------
*/
plugins {
	id 'war'
}

repositories.mavenCentral()
sourceCompatibility = 17
tasks.withType(JavaCompile) {options.encoding = 'UTF-8'}

dependencies {
	
	// Tomcat 9 (javax)
	compileOnly 'jakarta.servlet:jakarta.servlet-api:4.0.+'
	compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:2.3.+'
	runtimeOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.+'
	runtimeOnly 'org.apache.taglibs:taglibs-standard-impl:1.2.+'
	implementation 'org.jodd:jodd-servlet:6.0.+'
	
	// Tomcat 10.0 (jakarta) - Jodd Servlet 未リリース
	//compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.+'
	//compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.+'
	//runtimeOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.+'
	//runtimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.+'
	
	// Tomcat 10.1 (jakarta) - Jodd Servlet 未リリース
	//compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.+'
	//compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.+'
	//runtimeOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.+'
	//runtimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.+'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.+'
	implementation 'commons-beanutils:commons-beanutils:1.9.+'
	implementation 'de.mkammerer:argon2-jvm:2.+'
	implementation 'org.apache.commons:commons-lang3:3.12.+'
	implementation 'jp.co.future:uroborosql:0.25.+'
	compileOnly 'org.projectlombok:lombok:1.18.+'
	annotationProcessor 'org.projectlombok:lombok:1.18.+'
	runtimeOnly 'com.h2database:h2:2.1.+'
	runtimeOnly 'org.slf4j:slf4j-simple:1.7.+'
	runtimeOnly 'ognl:ognl:3.3.+'
}
